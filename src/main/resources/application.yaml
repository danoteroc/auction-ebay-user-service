spring:
  application:
    name: UserService
  jpa:
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      client:
        provider:
          cognito:
            issuer-uri: https://cognito-idp.us-east-2.amazonaws.com/${AWS_COGNITO_USERPOOL}
server:
  port: 8080
cognito:
  clientId: ${AWS_COGNITO_CLIENT_ID}
  userPool: ${AWS_COGNITO_USERPOOL}
  tokenSigningKey: ${AWS_COGNITO_TOKEN_SIGNING_KEY}

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    username: sa
    password:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5433/usersdb
    username: postgres
    password: password
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres-db:5432/usersdb
    username: postgres
    password: password
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true

---
#TODO remember to enable in the AWS EC2 instance through a command line argument
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://<AWS-POSTGRES-HOST>:<PORT>/<DB_NAME>
    driverClassName: org.postgresql.Driver
    username: <YOUR_AWS_DB_USERNAME>
    password: <YOUR_AWS_DB_PASSWORD>
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none